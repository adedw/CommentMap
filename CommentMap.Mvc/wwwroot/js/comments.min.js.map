{
  "version": 3,
  "sources": ["../../node_modules/rbush/rbush.min.js", "../../node_modules/ol/events/Event.js", "../../node_modules/ol/ObjectEventType.js", "../../node_modules/ol/Disposable.js", "../../node_modules/ol/array.js", "../../node_modules/ol/functions.js", "../../node_modules/ol/obj.js", "../../node_modules/ol/events/Target.js", "../../node_modules/ol/events/EventType.js", "../../node_modules/ol/events.js", "../../node_modules/ol/Observable.js", "../../node_modules/ol/util.js", "../../node_modules/ol/Object.js", "../../node_modules/ol/CollectionEventType.js", "../../node_modules/ol/Collection.js", "../../node_modules/ol/layer/Property.js", "../../node_modules/ol/asserts.js", "../../node_modules/ol/math.js", "../../node_modules/ol/layer/Base.js", "../../node_modules/ol/render/EventType.js", "../../node_modules/ol/ViewHint.js", "../../node_modules/ol/ViewProperty.js", "../../node_modules/ol/proj/Units.js", "../../node_modules/ol/proj/Projection.js", "../../node_modules/ol/proj/epsg3857.js", "../../node_modules/ol/proj/epsg4326.js", "../../node_modules/ol/proj/projections.js", "../../node_modules/ol/proj/transforms.js", "../../node_modules/ol/extent/Relationship.js", "../../node_modules/ol/extent.js", "../../node_modules/ol/coordinate.js", "../../node_modules/ol/sphere.js", "../../node_modules/ol/console.js", "../../node_modules/ol/proj.js", "../../node_modules/ol/centerconstraint.js", "../../node_modules/ol/resolutionconstraint.js", "../../node_modules/ol/rotationconstraint.js", "../../node_modules/ol/easing.js", "../../node_modules/ol/transform.js", "../../node_modules/ol/geom/flat/transform.js", "../../node_modules/ol/geom/Geometry.js", "../../node_modules/ol/geom/SimpleGeometry.js", "../../node_modules/ol/geom/flat/closest.js", "../../node_modules/ol/geom/flat/deflate.js", "../../node_modules/ol/geom/flat/simplify.js", "../../node_modules/ol/geom/flat/inflate.js", "../../node_modules/ol/geom/flat/area.js", "../../node_modules/ol/geom/LinearRing.js", "../../node_modules/ol/geom/Point.js", "../../node_modules/ol/geom/flat/contains.js", "../../node_modules/ol/geom/flat/interiorpoint.js", "../../node_modules/ol/geom/flat/segments.js", "../../node_modules/ol/geom/flat/intersectsextent.js", "../../node_modules/ol/geom/flat/reverse.js", "../../node_modules/ol/geom/flat/orient.js", "../../node_modules/ol/geom/Polygon.js", "../../node_modules/ol/View.js", "../../node_modules/ol/layer/Layer.js", "../../node_modules/ol/layer/BaseVector.js", "../../node_modules/ol/ImageState.js", "../../node_modules/ol/size.js", "../../node_modules/ol/style/Image.js", "../../node_modules/color-space/rgb.js", "../../node_modules/color-space/xyz.js", "../../node_modules/color-space/luv.js", "../../node_modules/color-space/lchuv.js", "../../node_modules/color-parse/node_modules/color-name/index.js", "../../node_modules/color-parse/index.js", "../../node_modules/color-space/hsl.js", "../../node_modules/color-rgba/index.js", "../../node_modules/ol/color.js", "../../node_modules/ol/has.js", "../../node_modules/ol/dom.js", "../../node_modules/ol/Image.js", "../../node_modules/ol/style/IconImageCache.js", "../../node_modules/ol/style/IconImage.js", "../../node_modules/ol/colorlike.js", "../../node_modules/ol/css.js", "../../node_modules/ol/render/canvas.js", "../../node_modules/ol/style/RegularShape.js", "../../node_modules/ol/style/Circle.js", "../../node_modules/ol/style/Fill.js", "../../node_modules/ol/style/Stroke.js", "../../node_modules/ol/style/Style.js", "../../node_modules/ol/style/Icon.js", "../../node_modules/ol/style/Text.js", "../../node_modules/ol/expr/expression.js", "../../node_modules/ol/expr/cpu.js", "../../node_modules/ol/render/canvas/style.js", "../../node_modules/ol/renderer/Map.js", "../../node_modules/ol/render/Event.js", "../../node_modules/ol/renderer/Composite.js", "../../node_modules/ol/layer/Group.js", "../../node_modules/ol/MapEvent.js", "../../node_modules/ol/MapBrowserEvent.js", "../../node_modules/ol/MapBrowserEventType.js", "../../node_modules/ol/pointer/EventType.js", "../../node_modules/ol/MapBrowserEventHandler.js", "../../node_modules/ol/MapEventType.js", "../../node_modules/ol/MapProperty.js", "../../node_modules/ol/structs/PriorityQueue.js", "../../node_modules/ol/TileState.js", "../../node_modules/ol/TileQueue.js", "../../node_modules/ol/control/Control.js", "../../node_modules/ol/control/Attribution.js", "../../node_modules/ol/control/Rotate.js", "../../node_modules/ol/control/Zoom.js", "../../node_modules/ol/control/defaults.js", "../../node_modules/ol/interaction/Property.js", "../../node_modules/ol/interaction/Interaction.js", "../../node_modules/ol/interaction/DoubleClickZoom.js", "../../node_modules/ol/interaction/Pointer.js", "../../node_modules/ol/events/condition.js", "../../node_modules/ol/interaction/DragPan.js", "../../node_modules/ol/interaction/DragRotate.js", "../../node_modules/ol/render/Box.js", "../../node_modules/ol/interaction/DragBox.js", "../../node_modules/ol/interaction/DragZoom.js", "../../node_modules/ol/events/Key.js", "../../node_modules/ol/interaction/KeyboardPan.js", "../../node_modules/ol/interaction/KeyboardZoom.js", "../../node_modules/ol/Kinetic.js", "../../node_modules/ol/interaction/MouseWheelZoom.js", "../../node_modules/ol/interaction/PinchRotate.js", "../../node_modules/ol/interaction/PinchZoom.js", "../../node_modules/ol/interaction/defaults.js", "../../node_modules/ol/Map.js", "../../node_modules/ol/layer/TileProperty.js", "../../node_modules/ol/layer/BaseTile.js", "../../node_modules/ol/renderer/Layer.js", "../../node_modules/ol/render/canvas/ZIndexContext.js", "../../node_modules/ol/renderer/canvas/Layer.js", "../../node_modules/ol/Tile.js", "../../node_modules/ol/ImageTile.js", "../../node_modules/ol/reproj/Triangulation.js", "../../node_modules/ol/reproj.js", "../../node_modules/ol/reproj/Tile.js", "../../node_modules/ol/TileRange.js", "../../node_modules/ol/renderer/canvas/TileLayer.js", "../../node_modules/ol/layer/Tile.js", "../../node_modules/ol/structs/LRUCache.js", "../../node_modules/ol/tilecoord.js", "../../node_modules/ol/TileCache.js", "../../node_modules/ol/source/TileEventType.js", "../../node_modules/ol/source/Source.js", "../../node_modules/ol/tilegrid/TileGrid.js", "../../node_modules/ol/tilegrid.js", "../../node_modules/ol/source/Tile.js", "../../node_modules/ol/tileurlfunction.js", "../../node_modules/ol/source/UrlTile.js", "../../node_modules/ol/source/TileImage.js", "../../node_modules/ol/source/XYZ.js", "../../Scripts/comments.ts"],
  "sourcesContent": ["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n", "/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n", "/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n", "/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n", "/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n", "/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n", "/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n", "/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n", "/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n", "/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n", "/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n", "/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n", "/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n", "/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n", "/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n", "/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n", "/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n", "/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n", "/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n", "/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n", "/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n", "/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n", "/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n", "/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n", "/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n", "/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n", "/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n", "/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n", "/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n", "/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n", "/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47\u00B0 58\u2032 60\u2033 N 7\u00B0 50\u2032 60\u2033 E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47\u00B0 58\u2032 60.0\u2033 N 7\u00B0 50\u2032 60.0\u2033 E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n", "/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n", "/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n", "/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n", "/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n", "/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n", "/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n", "/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n", "/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3\u00D73 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n", "/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n", "/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n", "/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n", "/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n", "/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n", "/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n", "/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n", "/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n", "/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n", "/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n", "/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n", "/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n", "/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n", "/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n", "/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n", "/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n", "/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n", "/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n", "/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n", "/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n", "/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n", "/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2\u00B0\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10\u00B0\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint\u2019s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n", "/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n", "/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n", "export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n", "/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n", "/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n", "/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n", "/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n", "/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n", "import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n", "/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n", "/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n", "/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n", "/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n", "/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n", "/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, '\u017Dg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n", "/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |\u03B1                                   .   .\n    //       /                                         .   .\n    //      \u00B0 center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n", "/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n", "/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n", "/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n", "/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n", "/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n", "/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45\u00B0 (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n", "/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n", "/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n", "/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n", "/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n", "/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n", "/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n", "/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n", "/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n", "/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n", "/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n", "/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n", "/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n", "/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n", "/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n", "/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n", "/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n", "/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n", "/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n", "/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='\u203A'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n", "/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='\u21E7'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n", "/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='\u2013'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n", "/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n", "/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n", "/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n", "/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n", "/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n", "/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n", "/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n", "/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n", "/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n", "/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n", "/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n", "/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n", "/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n", "/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n", "/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n", "/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n", "/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n", "/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n", "/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n", "/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n", "/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n", "/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n", "/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n", "/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n", "/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n", "/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n", "/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n", "/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n", "/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n", "/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n", "/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n", "/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n", "/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n", "/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n", "/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n", "/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n", "/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n", "/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'\u00A9 Acme Inc.'`)\n * * an array of simple strings (e.g. `['\u00A9 Acme Inc.', '\u00A9 Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n", "/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n", "/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n", "/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n", "/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n", "/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n", "/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n", "/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n", "import Map from \"ol/Map\";\r\nimport TileLayer from \"ol/layer/Tile\";\r\nimport XYZ from \"ol/source/XYZ\";\r\nimport View from 'ol/View';\r\n\r\nconst map = new Map({\r\n    target: \"map\",\r\n    layers: [\r\n        new TileLayer({\r\n            source: new XYZ({\r\n                url: 'http://mt0.google.com/vt/lyrs=m&hl=en&x={x}&y={y}&z={z}'\r\n            }),\r\n        })\r\n    ],\r\n    view: new View({\r\n        center: [0, 0],\r\n        zoom: 2,\r\n    }),\r\n});\r\n"],
  "mappings": "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",
  "names": ["require_rbush_min", "__commonJSMin", "exports", "module", "t", "i", "r", "e", "a", "h", "n", "o", "s", "l", "f", "u", "m", "c", "p", "d", "x", "v", "M", "BaseEvent", "type", "Event_default", "BaseEvent", "ObjectEventType_default", "Disposable", "Disposable_default", "ascending", "a", "b", "linearFindNearest", "arr", "target", "direction", "n", "i", "candidate", "extend", "arr", "data", "extension", "length", "i", "equals", "arr1", "arr2", "len1", "isSorted", "arr", "func", "strict", "compare", "ascending", "currentVal", "index", "res", "TRUE", "FALSE", "VOID", "memoizeOne", "fn", "called", "lastResult", "lastArgs", "lastThis", "nextArgs", "equals", "toPromise", "getter", "promiseGetter", "value", "err", "clear", "object", "property", "isEmpty", "Target", "Disposable_default", "target", "type", "listener", "listeners", "listenersForType", "event", "isString", "evt", "Event_default", "dispatching", "pendingRemovals", "propagate", "i", "ii", "pr", "VOID", "clear", "index", "Target_default", "EventType_default", "listen", "target", "type", "listener", "thisArg", "once", "originalListener", "eventsKey", "listenOnce", "unlistenByKey", "key", "clear", "Observable", "Target_default", "EventType_default", "type", "listener", "len", "keys", "i", "listen", "key", "listenOnce", "unByKey", "ii", "unlistenByKey", "Observable_default", "abstract", "uidCounter_", "getUid", "obj", "ObjectEvent", "Event_default", "type", "key", "oldValue", "BaseObject", "Observable_default", "values", "getUid", "value", "eventType", "ObjectEventType_default", "listener", "silent", "source", "isEmpty", "Object_default", "CollectionEventType_default", "Property", "CollectionEvent", "Event_default", "type", "element", "index", "Collection", "Object_default", "array", "options", "ii", "arr", "i", "f", "elem", "CollectionEventType_default", "n", "prev", "except", "Collection_default", "Property_default", "assert", "assertion", "errorMessage", "clamp", "value", "min", "max", "squaredSegmentDistance", "x", "y", "x1", "y1", "x2", "y2", "dx", "dy", "t", "squaredDistance", "solveLinearSystem", "mat", "n", "maxRow", "maxEl", "r", "absValue", "tmp", "j", "coef", "k", "l", "m", "toRadians", "angleInDegrees", "modulo", "a", "b", "r", "lerp", "x", "toFixed", "decimals", "factor", "floor", "decimals", "toFixed", "ceil", "BaseLayer", "Object_default", "options", "properties", "Property_default", "assert", "managed", "state", "zIndex", "clamp", "array", "abstract", "states", "background", "extent", "maxResolution", "minResolution", "maxZoom", "minZoom", "opacity", "visible", "zindex", "Base_default", "EventType_default", "ViewHint_default", "ViewProperty_default", "METERS_PER_UNIT", "Projection", "options", "METERS_PER_UNIT", "global", "tileGrid", "extent", "worldExtent", "func", "Projection_default", "RADIUS", "HALF_SIZE", "EXTENT", "WORLD_EXTENT", "MAX_SAFE_Y", "EPSG3857Projection", "Projection_default", "code", "resolution", "point", "PROJECTIONS", "fromEPSG4326", "input", "output", "dimension", "length", "i", "y", "toEPSG4326", "RADIUS", "EXTENT", "METERS_PER_UNIT", "EPSG4326Projection", "Projection_default", "code", "axisOrientation", "PROJECTIONS", "cache", "get", "code", "cache", "add", "projection", "transforms", "add", "source", "destination", "transformFn", "sourceCode", "destinationCode", "transforms", "get", "sourceCode", "destinationCode", "transform", "transforms", "Relationship_default", "boundingExtent", "coordinates", "extent", "createEmpty", "i", "ii", "extendCoordinate", "_boundingExtentXYs", "xs", "ys", "dest", "minX", "minY", "maxX", "maxY", "createOrUpdate", "clone", "extent", "dest", "closestSquaredDistanceXY", "x", "y", "dx", "dy", "containsCoordinate", "coordinate", "containsXY", "containsExtent", "extent1", "extent2", "coordinateRelationship", "minX", "minY", "maxX", "maxY", "relationship", "Relationship_default", "createEmpty", "createOrUpdate", "createOrUpdateEmpty", "createOrUpdateFromCoordinate", "createOrUpdateFromFlatCoordinates", "flatCoordinates", "offset", "end", "stride", "dest", "extent", "createOrUpdateEmpty", "extendFlatCoordinates", "equals", "extent1", "extent2", "extend", "extent1", "extent2", "extendCoordinate", "extent", "coordinate", "extendFlatCoordinates", "extent", "flatCoordinates", "offset", "end", "stride", "extendXY", "extendXY", "extent", "x", "y", "forEachCorner", "callback", "val", "getBottomLeft", "getBottomRight", "getTopRight", "getTopLeft", "getArea", "area", "isEmpty", "getWidth", "getHeight", "getCenter", "getCorner", "corner", "coordinate", "getForViewAndSize", "center", "resolution", "rotation", "size", "dest", "x0", "y0", "x1", "y1", "x2", "y2", "x3", "y3", "getRotatedViewport", "createOrUpdate", "dx", "dy", "cosRotation", "sinRotation", "xCos", "xSin", "yCos", "ySin", "x", "y", "getHeight", "extent", "getIntersection", "extent1", "extent2", "dest", "intersection", "createEmpty", "intersects", "createOrUpdateEmpty", "getTopLeft", "extent", "getTopRight", "getWidth", "intersects", "extent1", "extent2", "isEmpty", "returnOrUpdate", "dest", "intersectsSegment", "extent", "start", "end", "intersects", "startRel", "coordinateRelationship", "endRel", "Relationship_default", "minX", "minY", "maxX", "maxY", "startX", "startY", "endX", "endY", "slope", "y", "applyTransform", "transformFn", "dest", "stops", "isEmpty", "createOrUpdateEmpty", "coordinates", "width", "height", "i", "xs", "ys", "_boundingExtentXYs", "wrapX", "projection", "projectionExtent", "center", "getCenter", "worldWidth", "getWidth", "offset", "wrapAndSliceX", "multiWorld", "add", "coordinate", "delta", "equals", "coordinate1", "coordinate2", "rotate", "coordinate", "angle", "cosAngle", "sinAngle", "x", "y", "scale", "wrapX", "coordinate", "projection", "worldWidth", "getWidth", "worldsAway", "getWorldsAway", "sourceExtentWidth", "projectionExtent", "DEFAULT_RADIUS", "getDistance", "c1", "c2", "radius", "lat1", "toRadians", "lat2", "deltaLatBy2", "deltaLonBy2", "levels", "level", "warn", "args", "level", "levels", "showCoordinateWarning", "disableCoordinateWarning", "disable", "cloneTransform", "input", "output", "i", "ii", "identityTransform", "addProjection", "projection", "add", "addProjections", "projections", "get", "projectionLike", "getPointResolution", "resolution", "point", "units", "pointResolution", "getter", "metersPerUnit", "METERS_PER_UNIT", "projUnits", "toEPSG4326", "getTransformFromProjections", "vertices", "width", "getDistance", "height", "addEquivalentProjections", "source", "destination", "addEquivalentTransforms", "projections1", "projections2", "forwardTransform", "inverseTransform", "projection1", "projection2", "createProjection", "projection", "defaultCode", "get", "equivalent", "projection1", "projection2", "equalUnits", "getTransformFromProjections", "cloneTransform", "sourceProjection", "destinationProjection", "sourceCode", "destinationCode", "transformFunc", "get", "identityTransform", "getTransform", "source", "destination", "transform", "coordinate", "transformExtent", "extent", "stops", "applyTransform", "userProjection", "getUserProjection", "userProjection", "toUserCoordinate", "coordinate", "sourceProjection", "userProjection", "transform", "fromUserCoordinate", "destProjection", "showCoordinateWarning", "equals", "warn", "toUserExtent", "extent", "transformExtent", "fromUserExtent", "addCommon", "addEquivalentProjections", "PROJECTIONS", "addEquivalentTransforms", "fromEPSG4326", "toEPSG4326", "createExtent", "extent", "onlyCenter", "smooth", "center", "resolution", "size", "isMoving", "centerShift", "viewWidth", "viewHeight", "shiftX", "shiftY", "minX", "maxX", "minY", "maxY", "x", "clamp", "y", "ratio", "none", "getViewportClampedResolution", "resolution", "maxExtent", "viewportSize", "showFullExtent", "xResolution", "getWidth", "yResolution", "getHeight", "getSmoothClampedResolution", "maxResolution", "minResolution", "result", "ratio", "clamp", "createSnapToResolutions", "resolutions", "smooth", "direction", "size", "isMoving", "cappedMaxRes", "capped", "z", "linearFindNearest", "createSnapToPower", "power", "tolerance", "minZoomLevel", "offset", "cappedZoomLevel", "zoomLevel", "newResolution", "createMinMaxResolution", "disable", "rotation", "none", "createSnapToN", "theta", "isMoving", "createSnapToZero", "tolerance", "toRadians", "easeIn", "t", "easeOut", "inAndOut", "linear", "tmp_", "create", "apply", "transform", "coordinate", "x", "y", "compose", "transform", "dx1", "dy1", "sx", "sy", "angle", "dx2", "dy2", "sin", "cos", "makeInverse", "target", "source", "det", "determinant", "assert", "a", "b", "c", "d", "e", "f", "mat", "matrixPrecision", "toString", "value", "transform2D", "flatCoordinates", "offset", "end", "stride", "transform", "dest", "i", "j", "x", "y", "rotate", "angle", "anchor", "cos", "sin", "anchorX", "anchorY", "deltaX", "deltaY", "k", "scale", "sx", "sy", "translate", "tmpTransform", "create", "Geometry", "Object_default", "createEmpty", "memoizeOne", "revision", "squaredTolerance", "transform", "clone", "abstract", "x", "y", "closestPoint", "minSquaredDistance", "coord", "point", "coordinate", "extent", "createOrUpdateEmpty", "returnOrUpdate", "angle", "anchor", "sx", "sy", "tolerance", "transformFn", "deltaX", "deltaY", "source", "destination", "sourceProj", "get", "inCoordinates", "outCoordinates", "stride", "pixelExtent", "projectedExtent", "scale", "getHeight", "compose", "transform2D", "getTransform", "Geometry_default", "SimpleGeometry", "Geometry_default", "extent", "createOrUpdateFromFlatCoordinates", "abstract", "squaredTolerance", "simplifiedGeometry", "layout", "flatCoordinates", "getStrideForLayout", "coordinates", "nesting", "stride", "i", "getLayoutForStride", "transformFn", "angle", "anchor", "rotate", "sx", "sy", "getCenter", "scale", "deltaX", "deltaY", "translate", "SimpleGeometry_default", "SimpleGeometry", "assignClosest", "flatCoordinates", "offset1", "offset2", "stride", "x", "y", "closestPoint", "x1", "y1", "dx", "dy", "offset", "t", "i", "lerp", "maxSquaredDelta", "end", "max", "x2", "y2", "squaredDelta", "squaredDistance", "arrayMaxSquaredDelta", "ends", "ii", "assignClosestPoint", "flatCoordinates", "offset", "end", "stride", "maxDelta", "isRing", "x", "y", "closestPoint", "minSquaredDistance", "tmpPoint", "i", "squaredDistance", "index", "assignClosest", "assignClosestArrayPoint", "ends", "ii", "deflateCoordinate", "flatCoordinates", "offset", "coordinate", "stride", "i", "ii", "deflateCoordinates", "coordinates", "j", "deflateCoordinatesArray", "coordinatess", "ends", "jj", "end", "douglasPeucker", "flatCoordinates", "offset", "end", "stride", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedOffset", "n", "markers", "stack", "index", "last", "first", "maxSquaredDistance", "x1", "y1", "x2", "y2", "i", "x", "y", "squaredDistance", "squaredSegmentDistance", "snap", "value", "tolerance", "quantize", "flatCoordinates", "offset", "end", "stride", "simplifiedFlatCoordinates", "simplifiedOffset", "x1", "y1", "x2", "y2", "x3", "y3", "dx1", "dy1", "dx2", "dy2", "quantizeArray", "ends", "simplifiedEnds", "i", "ii", "inflateCoordinates", "flatCoordinates", "offset", "end", "stride", "coordinates", "i", "j", "inflateCoordinatesArray", "ends", "coordinatess", "jj", "linearRing", "flatCoordinates", "offset", "end", "stride", "twiceArea", "x1", "y1", "x2", "y2", "linearRings", "ends", "area", "i", "ii", "LinearRing", "_LinearRing", "SimpleGeometry_default", "coordinates", "layout", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "maxSquaredDelta", "assignClosestPoint", "linearRing", "inflateCoordinates", "squaredTolerance", "simplifiedFlatCoordinates", "douglasPeucker", "extent", "deflateCoordinates", "LinearRing_default", "Point", "_Point", "SimpleGeometry_default", "coordinates", "layout", "point", "x", "y", "closestPoint", "minSquaredDistance", "flatCoordinates", "squaredDistance", "stride", "i", "extent", "createOrUpdateFromCoordinate", "containsXY", "deflateCoordinate", "Point_default", "linearRingContainsExtent", "flatCoordinates", "offset", "end", "stride", "extent", "forEachCorner", "coordinate", "linearRingContainsXY", "x", "y", "wn", "x1", "y1", "x2", "y2", "linearRingsContainsXY", "ends", "i", "ii", "getInteriorPointOfArray", "flatCoordinates", "offset", "ends", "stride", "flatCenters", "flatCentersOffset", "dest", "i", "ii", "x", "x1", "x2", "y1", "y2", "y", "intersections", "r", "rr", "end", "pointX", "maxSegmentLength", "ascending", "segmentLength", "linearRingsContainsXY", "forEach", "flatCoordinates", "offset", "end", "stride", "callback", "ret", "intersectsLineString", "flatCoordinates", "offset", "end", "stride", "extent", "coordinatesExtent", "extendFlatCoordinates", "createEmpty", "intersects", "containsExtent", "forEach", "point1", "point2", "intersectsSegment", "intersectsLinearRing", "flatCoordinates", "offset", "end", "stride", "extent", "intersectsLineString", "linearRingContainsXY", "intersectsLinearRingArray", "ends", "i", "ii", "linearRingContainsExtent", "coordinates", "flatCoordinates", "offset", "end", "stride", "i", "tmp", "linearRingIsClockwise", "flatCoordinates", "offset", "end", "stride", "edge", "x1", "y1", "x2", "y2", "linearRingsAreOriented", "ends", "right", "i", "ii", "isClockwise", "orientLinearRings", "flatCoordinates", "offset", "ends", "stride", "right", "i", "ii", "end", "isClockwise", "linearRingIsClockwise", "coordinates", "Polygon", "_Polygon", "SimpleGeometry_default", "coordinates", "layout", "ends", "linearRing", "extend", "polygon", "x", "y", "closestPoint", "minSquaredDistance", "closestSquaredDistanceXY", "arrayMaxSquaredDelta", "assignClosestArrayPoint", "linearRingsContainsXY", "linearRings", "right", "flatCoordinates", "orientLinearRings", "inflateCoordinatesArray", "flatCenter", "getCenter", "getInteriorPointOfArray", "Point_default", "index", "LinearRing_default", "offset", "i", "ii", "end", "linearRingsAreOriented", "squaredTolerance", "simplifiedFlatCoordinates", "simplifiedEnds", "quantizeArray", "extent", "intersectsLinearRingArray", "deflateCoordinatesArray", "Polygon_default", "fromExtent", "extent", "isEmpty", "minX", "minY", "maxX", "maxY", "flatCoordinates", "Polygon", "DEFAULT_MIN_ZOOM", "View", "Object_default", "options", "createProjection", "disableCoordinateWarning", "fromUserCoordinate", "fromUserExtent", "properties", "key", "ViewProperty_default", "resolutionConstraintInfo", "createResolutionConstraint", "centerConstraint", "createCenterConstraint", "resolutionConstraint", "rotationConstraint", "createRotationConstraint", "padding", "oldPadding", "center", "newPadding", "resolution", "offsetX", "offsetY", "newOptions", "var_args", "args", "animationCount", "callback", "i", "state", "animationCallback", "start", "rotation", "series", "animation", "inAndOut", "delta", "modulo", "isNoopAnimation", "ViewHint_default", "anchor", "ii", "j", "jj", "now", "more", "seriesComplete", "elapsed", "fraction", "progress", "x0", "y0", "x1", "y1", "x", "y", "size", "constrainedResolution", "constrainedRotation", "currentCenter", "rotate", "add", "currentResolution", "w", "h", "toUserCoordinate", "hints", "extent", "toUserExtent", "assert", "getForViewAndSize", "zoom", "enabled", "xResolution", "getWidth", "yResolution", "getHeight", "power", "maxResolution", "minResolution", "max", "value", "logPower", "projection", "reducedSize", "calculateCenterOn", "offset", "zoomFactor", "nearest", "linearFindNearest", "baseLevel", "clamp", "geometryOrExtent", "geometry", "isEmpty", "fromExtent", "getCenter", "userProjection", "getUserProjection", "cosAngle", "sinAngle", "coords", "stride", "minRotX", "minRotY", "maxRotX", "maxRotY", "rotX", "rotY", "rotatedExtent", "centerRot", "centerX", "centerY", "VOID", "coordinate", "position", "centerShift", "shiftedCenter", "deltaCoordinates", "ratio", "isMoving", "newResolution", "newRotation", "hint", "doNotCancelAnims", "forceMoving", "newCenter", "equals", "duration", "resolutionDirection", "direction", "easeOut", "targetCenter", "targetResolution", "targetZoom", "targetRes", "returnValue", "smooth", "createExtent", "none", "minZoom", "maxZoom", "multiWorld", "showFullExtent", "projExtent", "constrainOnlyCenter", "resolutions", "createSnapToResolutions", "createMinMaxResolution", "defaultMaxResolution", "METERS_PER_UNIT", "defaultMinResolution", "createSnapToPower", "constrainRotation", "createSnapToZero", "createSnapToN", "disable", "View_default", "Layer", "Base_default", "options", "baseOptions", "Property_default", "source", "array", "states", "unlistenByKey", "listen", "EventType_default", "pixel", "view", "frameState", "map", "View_default", "layerState", "layerExtent", "inView", "intersects", "getAttributions", "attributions", "target", "layerRenderer", "evt", "layerStatesArray", "assert", "arrayLayerState", "viewState", "resolution", "zoom", "Layer_default", "import_rbush", "ImageState_default", "hasArea", "size", "scale", "ratio", "dest", "toSize", "ImageStyle", "_ImageStyle", "options", "toSize", "scale", "abstract", "pixelRatio", "displacement", "opacity", "rotateWithView", "rotation", "listener", "Image_default", "rgb_default", "xyz", "_xyz", "white", "x", "y", "z", "r", "g", "b", "rgb_default", "rgb", "xyz_default", "luv_default", "arg", "i", "o", "_u", "_v", "l", "u", "v", "x", "y", "z", "xn", "yn", "zn", "un", "vn", "k", "xyz_default", "e", "yr", "lchuv", "luv", "l", "c", "h", "u", "v", "hr", "arg", "luv_default", "lchuv_default", "xyz_default", "color_name_default", "color_parse_default", "parse", "baseHues", "cstr", "m", "parts", "alpha", "space", "color_name_default", "base", "size", "isShort", "name", "dims", "x", "i", "value", "hsl_default", "hsl", "h", "s", "l", "t1", "t2", "t3", "rgb", "val", "i", "rgb_default", "r", "g", "b", "min", "max", "delta", "rgba", "color", "values", "i", "l", "parsed", "color_parse_default", "min", "hsl_default", "rgb_default", "max", "asString", "color", "toString", "MAX_CACHE_SIZE", "cache", "cacheSize", "withAlpha", "output", "rgbaToLcha", "xyz_default", "rgb_default", "lchaToRgba", "lchuv_default", "fromString", "s", "i", "key", "rgba", "c", "normalize", "asArray", "clamp", "r", "g", "b", "a", "isStringColor", "ua", "FIREFOX", "SAFARI", "SAFARI_BUG_237906", "WEBKIT", "MAC", "DEVICE_PIXEL_RATIO", "WORKER_OFFSCREEN_CANVAS", "IMAGE_DECODE", "PASSIVE_EVENT_LISTENERS", "passive", "options", "createCanvasContext2D", "width", "height", "canvasPool", "settings", "canvas", "WORKER_OFFSCREEN_CANVAS", "sharedCanvasContext", "getSharedCanvasContext2D", "releaseCanvas", "context", "replaceNode", "newNode", "oldNode", "parent", "removeNode", "node", "removeChildren", "replaceChildren", "children", "oldChildren", "oldChild", "newChild", "listenImage", "image", "loadHandler", "errorHandler", "img", "listening", "decoding", "loaded", "listenerKeys", "listenOnce", "EventType_default", "IMAGE_DECODE", "error", "unlistenByKey", "load", "src", "resolve", "reject", "handleLoad", "unlisten", "handleError", "decodeFallback", "e", "IconImageCache", "i", "key", "iconImage", "src", "crossOrigin", "color", "getCacheKey", "pattern", "update", "ImageState_default", "getSharedCanvasContext2D", "maxCacheSize", "colorString", "asArray", "shared", "IconImageCache", "taintedTestContext", "IconImage", "Target_default", "image", "src", "crossOrigin", "imageState", "color", "ImageState_default", "createCanvasContext2D", "EventType_default", "pixelRatio", "width", "height", "context", "decodeFallback", "canvas", "ctx", "asString", "resolve", "onChange", "get", "cacheKey", "pattern", "iconImage", "shared", "asColorLike", "color", "toString", "asCanvasPattern", "pattern", "shared", "cacheKey", "canvasPattern", "iconImage", "ImageState_default", "patternCanvasContext", "createCanvasContext2D", "get", "CLASS_HIDDEN", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "CLASS_COLLAPSED", "fontRegEx", "fontRegExMatchIndex", "getFontParameters", "fontSpec", "match", "style", "ii", "value", "defaultFillStyle", "defaultLineCap", "defaultLineJoin", "defaultMiterLimit", "defaultStrokeStyle", "defaultLineWidth", "checkedFonts", "Object_default", "measureContext", "measureFont", "textHeights", "registerFont", "size", "referenceFonts", "len", "text", "interval", "referenceWidth", "isAvailable", "fontStyle", "fontWeight", "fontFamily", "available", "i", "referenceFont", "measureTextWidth", "width", "check", "done", "fonts", "ii", "font", "clear", "fontSpec", "getFontParameters", "families", "family", "key", "measureText", "font", "text", "measureContext", "createCanvasContext2D", "measureFont", "measureTextWidth", "RegularShape", "_RegularShape", "Image_default", "options", "ImageState_default", "scale", "style", "size", "displacement", "fill", "pixelRatio", "image", "renderOptions", "context", "createCanvasContext2D", "stroke", "listener", "lineJoin", "strokeWidth", "miterLimit", "r1", "r2", "tmp", "points", "alpha", "a", "b", "d", "e", "miterRatio", "k", "l", "bevelAdd", "aa", "bb", "dd", "innerMiterRatio", "innerLength", "lineCap", "defaultLineCap", "defaultLineJoin", "lineDash", "lineDashOffset", "strokeStyle", "asColorLike", "defaultStrokeStyle", "defaultLineWidth", "defaultMiterLimit", "add", "maxRadius", "color", "defaultFillStyle", "opacity", "asArray", "radius", "radius2", "startAngle", "step", "i", "angle0", "radiusC", "RegularShape_default", "CircleStyle", "_CircleStyle", "RegularShape_default", "options", "scale", "style", "radius", "Circle_default", "Fill", "_Fill", "options", "color", "patternImage", "get", "ImageState_default", "Fill_default", "Stroke", "_Stroke", "options", "color", "lineCap", "lineDash", "lineDashOffset", "lineJoin", "miterLimit", "width", "Stroke_default", "Style", "_Style", "options", "defaultGeometryFunction", "geometry", "renderer", "fill", "image", "stroke", "text", "feature", "zIndex", "toFunction", "obj", "styleFunction", "styles", "assert", "defaultStyles", "createDefaultStyle", "resolution", "Fill_default", "Stroke_default", "Circle_default", "defaultGeometryFunction", "feature", "Style_default", "Style", "calculateScale", "width", "height", "wantedWidth", "wantedHeight", "Icon", "_Icon", "Image_default", "options", "opacity", "rotation", "scale", "rotateWithView", "image", "cacheKey", "assert", "getUid", "imageState", "ImageState_default", "asArray", "get", "onload", "imageSize", "anchor", "size", "displacement", "pixelRatio", "offset", "iconImageSize", "listener", "EventType_default", "Icon_default", "DEFAULT_FILL_COLOR", "Text", "_Text", "options", "toSize", "Fill_default", "scale", "overflow", "font", "maxAngle", "offsetX", "offsetY", "placement", "repeat", "rotateWithView", "fill", "rotation", "stroke", "text", "textAlign", "justify", "textBaseline", "padding", "Text_default", "numTypes", "NoneType", "BooleanType", "NumberType", "StringType", "ColorType", "NumberArrayType", "SizeType", "AnyType", "typeNames", "namedTypes", "ascending", "typeName", "type", "names", "namedType", "includesType", "broad", "specific", "overlapsType", "oneType", "otherType", "isType", "expected", "LiteralExpression", "value", "CallExpression", "operator", "args", "newParsingContext", "getTypeFromHint", "typeHint", "parse", "encoded", "context", "isStringColor", "parseCallExpression", "item", "Ops", "parsers", "createParser", "_", "withArgsCount", "withGetArgs", "firstArg", "withVarArgs", "withNoArgs", "usesFeatureId", "parseArgsOfType", "usesGeometryType", "narrowArgsType", "parsedArgs", "outputType", "i", "withEvenArgs", "parseMatchArgs", "parseInterpolateArgs", "withOddArgs", "parseCaseArgs", "parseInArgs", "parsePaletteArgs", "arg", "hint", "varName", "initialValue", "operation", "minArgs", "maxArgs", "argCount", "plural", "range", "argType", "expression", "gotType", "expectedType", "sameType", "argsCount", "inputType", "fallback", "match", "output", "expectedInputType", "interpolationType", "interpolation", "input", "stop", "condition", "haystack", "needleType", "index", "colors", "parsedColors", "color", "returnType", "argValidators", "actualType", "parser", "computeGeometryType", "geometry", "newEvaluationContext", "buildExpression", "encoded", "type", "context", "expression", "parse", "overlapsType", "expected", "typeName", "actual", "compileExpression", "LiteralExpression", "ColorType", "colorValue", "fromString", "operator", "Ops", "compileAssertionExpression", "compileAccessorExpression", "args", "e", "arg", "compileLogicalExpression", "compileComparisonExpression", "compileNumericExpression", "compileCaseExpression", "compileMatchExpression", "compileInterpolateExpression", "compileConvertExpression", "length", "i", "value", "name", "op", "left", "right", "min", "max", "base", "previousInput", "previousOutput", "input", "output", "isColor", "withAlpha", "interpolateColor", "interpolateNumber", "toString", "input1", "output1", "input2", "output2", "delta", "along", "factor", "rgba1", "rgba2", "lcha1", "rgbaToLcha", "lcha2", "deltaHue", "lcha", "normalize", "lchaToRgba", "always", "context", "rulesToStyleFunction", "rules", "parsingContext", "newParsingContext", "evaluator", "buildRuleSet", "evaluationContext", "newEvaluationContext", "feature", "resolution", "id", "computeGeometryType", "flatStylesToStyleFunction", "flatStyles", "length", "evaluators", "i", "buildStyle", "styles", "nonNullCount", "style", "compiledRules", "rule", "filter", "buildExpression", "BooleanType", "styleLength", "j", "someMatched", "filterEvaluator", "styleEvaluator", "flatStyle", "evaluateFill", "buildFill", "evaluateStroke", "buildStroke", "evaluateText", "buildText", "evaluateImage", "buildImage", "evaluateZIndex", "numberEvaluator", "isEmpty", "Style_default", "empty", "fill", "stroke", "text", "image", "prefix", "evaluateColor", "patternEvaluator", "colorLikeEvaluator", "Fill_default", "color", "evaluateWidth", "evaluateLineCap", "stringEvaluator", "evaluateLineJoin", "evaluateLineDash", "numberArrayEvaluator", "evaluateLineDashOffset", "evaluateMiterLimit", "Stroke_default", "lineCap", "lineJoin", "evaluateValue", "evaluateBackgroundFill", "evaluateBackgroundStroke", "evaluateFont", "evaluateMaxAngle", "evaluateOffsetX", "evaluateOffsetY", "evaluateOverflow", "booleanEvaluator", "evaluatePlacement", "evaluateRepeat", "evaluateScale", "sizeLikeEvaluator", "evaluateRotateWithView", "evaluateRotation", "evaluateAlign", "evaluateJustify", "evaluateBaseline", "evaluatePadding", "declutterMode", "optionalDeclutterMode", "Text_default", "placement", "textAlign", "justify", "textBaseline", "buildIcon", "buildShape", "buildCircle", "srcName", "src", "requireString", "evaluateAnchor", "coordinateEvaluator", "evaluateOpacity", "evaluateDisplacement", "anchorOrigin", "optionalIconOrigin", "anchorXUnits", "optionalIconAnchorUnits", "anchorYUnits", "optionalColorLike", "crossOrigin", "optionalString", "offset", "optionalNumberArray", "offsetOrigin", "width", "optionalNumber", "height", "size", "optionalSize", "icon", "Icon_default", "pointsName", "radiusName", "points", "requireNumber", "radius", "radius2", "angle", "shape", "RegularShape_default", "evaluateRadius", "circle", "Circle_default", "name", "NumberType", "StringType", "srcEvaluator", "offsetEvaluator", "sizeEvaluator", "patternSizeEvaluator", "colorEvaluator", "value", "ColorType", "requireColorLike", "NumberArrayType", "requireNumberArray", "array", "requireSize", "requireSizeLike", "property", "encoded", "toSize", "Property", "BaseVectorLayer", "Layer_default", "options", "baseOptions", "pixel", "frameState", "layerState", "declutterGroup", "RBush", "renderOrder", "style", "createDefaultStyle", "styleLike", "toStyleLike", "toFunction", "Style_default", "flatStylesToStyleFunction", "length", "first", "styles", "i", "candidate", "rules", "rulesToStyleFunction", "BaseVector_default", "MapRenderer", "Disposable_default", "map", "type", "frameState", "abstract", "viewState", "coordinateToPixelTransform", "pixelToCoordinateTransform", "compose", "makeInverse", "coordinate", "hitTolerance", "checkWrapped", "callback", "thisArg", "layerFilter", "thisArg2", "result", "forEachFeatureAtCoordinate", "managed", "feature", "layer", "geometry", "projection", "translatedCoordinate", "wrapX", "offsets", "projectionExtent", "worldWidth", "getWidth", "layerStates", "numLayers", "matches", "tmpCoord", "i", "j", "layerState", "inView", "layerRenderer", "source", "coordinates", "order", "m", "a", "b", "TRUE", "shared", "expireIconCache", "Map_default", "RenderEvent", "Event_default", "type", "inversePixelTransform", "frameState", "context", "CompositeMapRenderer", "Map_default", "map", "listen", "checkedFonts", "ObjectEventType_default", "style", "CLASS_UNSELECTABLE", "container", "type", "frameState", "event", "Event_default", "unlistenByKey", "EventType_default", "layerStatesArray", "b", "layerState", "BaseVector_default", "viewState", "renderedLayerStates", "previousElement", "i", "ii", "layer", "sourceState", "inView", "element", "replaceChildren", "layerStates", "Composite_default", "GroupEvent", "Event_default", "type", "layer", "Property", "LayerGroup", "_LayerGroup", "Base_default", "options", "baseOptions", "layers", "Collection_default", "assert", "unlistenByKey", "listen", "CollectionEventType_default", "id", "clear", "layersArray", "ii", "listenerKeys", "ObjectEventType_default", "EventType_default", "getUid", "event", "collectionEvent", "key", "collection", "currentLayers", "i", "array", "dest", "states", "pos", "ownLayerState", "defaultZIndex", "layerState", "getIntersection", "Group_default", "MapEvent", "Event_default", "type", "map", "frameState", "MapEvent_default", "MapBrowserEvent", "MapEvent_default", "type", "map", "originalEvent", "dragging", "frameState", "activePointers", "pixel", "coordinate", "MapBrowserEvent_default", "MapBrowserEventType_default", "EventType_default", "EventType_default", "MapBrowserEventHandler", "Target_default", "map", "moveTolerance", "element", "listen", "EventType_default", "PASSIVE_EVENT_LISTENERS", "pointerEvent", "newEvent", "MapBrowserEvent_default", "MapBrowserEventType_default", "event", "id", "pointerId", "unlistenByKey", "doc", "dragging", "originalEvent", "MapBrowserEventHandler_default", "MapEventType_default", "MapProperty_default", "DROP", "PriorityQueue", "priorityFunction", "keyFunction", "clear", "elements", "priorities", "element", "elementKey", "assert", "priority", "index", "i", "key", "count", "startIndex", "lIndex", "rIndex", "smallerChildIndex", "parentIndex", "n", "PriorityQueue_default", "TileState_default", "TileQueue", "PriorityQueue_default", "tilePriorityFunction", "tileChangeCallback", "element", "added", "EventType_default", "event", "tile", "state", "TileState_default", "tileKey", "maxTotalLoading", "maxNewLoads", "newLoads", "TileQueue_default", "getTilePriority", "frameState", "tileSourceKey", "tileCenter", "tileResolution", "DROP", "center", "deltaX", "deltaY", "Control", "Object_default", "options", "element", "removeNode", "map", "i", "ii", "unlistenByKey", "VOID", "listen", "MapEventType_default", "mapEvent", "target", "Control_default", "Attribution", "Control_default", "options", "className", "tipLabel", "expandClassName", "collapseLabel", "collapseClassName", "label", "activeLabel", "EventType_default", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "CLASS_COLLAPSED", "element", "frameState", "visibleAttributions", "layer", "collapsible", "attributions", "attribution", "toPromise", "visible", "equals", "removeChildren", "i", "ii", "event", "replaceNode", "collapsed", "mapEvent", "Attribution_default", "Rotate", "Control_default", "options", "className", "label", "compassClassName", "tipLabel", "button", "EventType_default", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "element", "CLASS_HIDDEN", "event", "view", "rotation", "easeOut", "mapEvent", "frameState", "transform", "contains", "Rotate_default", "Zoom", "Control_default", "options", "className", "delta", "zoomInClassName", "zoomOutClassName", "zoomInLabel", "zoomOutLabel", "zoomInTipLabel", "zoomOutTipLabel", "inElement", "EventType_default", "outElement", "cssClasses", "CLASS_UNSELECTABLE", "CLASS_CONTROL", "element", "event", "view", "currentZoom", "newZoom", "easeOut", "Zoom_default", "defaults", "options", "controls", "Collection_default", "Zoom_default", "Rotate_default", "Attribution_default", "Property_default", "Interaction", "Object_default", "options", "Property_default", "mapBrowserEvent", "active", "map", "pan", "view", "delta", "duration", "currentCenter", "center", "linear", "zoomByDelta", "anchor", "currentZoom", "newZoom", "newResolution", "easeOut", "Interaction_default", "DoubleClickZoom", "Interaction_default", "options", "mapBrowserEvent", "stopEvent", "MapBrowserEventType_default", "browserEvent", "map", "anchor", "delta", "view", "zoomByDelta", "DoubleClickZoom_default", "PointerInteraction", "Interaction_default", "options", "mapBrowserEvent", "stopEvent", "MapBrowserEventType_default", "handledUp", "handled", "centroid", "pointerEvents", "length", "clientX", "clientY", "i", "Pointer_default", "all", "var_args", "conditions", "event", "pass", "i", "ii", "altShiftKeysOnly", "mapBrowserEvent", "originalEvent", "focus", "event", "targetElement", "activeElement", "focusWithTabindex", "always", "TRUE", "mouseActionButton", "mapBrowserEvent", "originalEvent", "WEBKIT", "MAC", "noModifierKeys", "mapBrowserEvent", "originalEvent", "platformModifierKey", "mapBrowserEvent", "originalEvent", "MAC", "shiftKeyOnly", "targetNotEditable", "tagName", "mouseOnly", "pointerEvent", "assert", "primaryAction", "mapBrowserEvent", "pointerEvent", "assert", "DragPan", "Pointer_default", "options", "FALSE", "condition", "all", "noModifierKeys", "primaryAction", "focusWithTabindex", "mapBrowserEvent", "map", "targetPointers", "centroid", "delta", "view", "scale", "rotate", "distance", "angle", "center", "centerpx", "dest", "easeOut", "DragPan_default", "DragRotate", "Pointer_default", "options", "FALSE", "altShiftKeysOnly", "mapBrowserEvent", "mouseOnly", "map", "view", "disable", "size", "offset", "theta", "delta", "mouseActionButton", "DragRotate_default", "RenderBox", "Disposable_default", "className", "startPixel", "endPixel", "px", "style", "map", "coordinates", "Polygon_default", "Box_default", "DragBoxEventType", "DragBoxEvent", "Event_default", "type", "coordinate", "mapBrowserEvent", "DragBox", "Pointer_default", "options", "Box_default", "mouseActionButton", "startPixel", "endPixel", "width", "height", "completeBox", "event", "active", "DragBox_default", "DragZoom", "DragBox_default", "options", "condition", "shiftKeyOnly", "event", "view", "geometry", "rotatedExtent", "resolution", "factor", "easeOut", "DragZoom_default", "Key_default", "KeyboardPan", "Interaction_default", "options", "mapBrowserEvent", "noModifierKeys", "targetNotEditable", "stopEvent", "EventType_default", "keyEvent", "key", "Key_default", "view", "mapUnitsDelta", "deltaX", "deltaY", "delta", "rotate", "pan", "KeyboardPan_default", "KeyboardZoom", "Interaction_default", "options", "mapBrowserEvent", "platformModifierKey", "targetNotEditable", "stopEvent", "EventType_default", "keyEvent", "key", "map", "delta", "view", "zoomByDelta", "KeyboardZoom_default", "Kinetic", "decay", "minVelocity", "delay", "x", "y", "lastIndex", "firstIndex", "duration", "dx", "dy", "Kinetic_default", "MouseWheelZoom", "Interaction_default", "options", "condition", "always", "all", "focusWithTabindex", "map", "mapBrowserEvent", "EventType_default", "wheelEvent", "delta", "FIREFOX", "DEVICE_PIXEL_RATIO", "now", "view", "timeLeft", "clamp", "zoomByDelta", "useAnchor", "MouseWheelZoom_default", "PinchRotate", "Pointer_default", "options", "pointerOptions", "FALSE", "mapBrowserEvent", "rotationDelta", "touch0", "touch1", "angle", "delta", "map", "view", "disable", "centroid", "PinchRotate_default", "PinchZoom", "Pointer_default", "options", "pointerOptions", "FALSE", "mapBrowserEvent", "scaleDelta", "touch0", "touch1", "dx", "dy", "distance", "map", "view", "centroid", "direction", "PinchZoom_default", "defaults", "options", "interactions", "Collection_default", "kinetic", "Kinetic_default", "DragRotate_default", "DoubleClickZoom_default", "DragPan_default", "PinchRotate_default", "PinchZoom_default", "KeyboardPan_default", "KeyboardZoom_default", "MouseWheelZoom_default", "DragZoom_default", "removeLayerMapProperty", "layer", "Layer_default", "Group_default", "setLayerMapProperty", "map", "layers", "ii", "Map", "Object_default", "options", "optionsInternal", "createOptionsInternal", "DEVICE_PIXEL_RATIO", "create", "defaults", "TileQueue_default", "MapProperty_default", "View_default", "viewOptions", "CollectionEventType_default", "event", "id", "control", "interaction", "overlay", "pixel", "callback", "coordinate", "hitTolerance", "layerFilter", "TRUE", "checkWrapped", "features", "feature", "addLayersFrom", "layerGroup", "viewportPosition", "viewportSize", "scaleX", "scaleY", "eventPosition", "toUserCoordinate", "frameState", "apply", "group", "Collection_default", "collection", "layerStatesArray", "i", "state", "renderer", "source", "viewCoordinate", "fromUserCoordinate", "targetElement", "tile", "tileSourceKey", "tileCenter", "tileResolution", "getTilePriority", "browserEvent", "type", "mapBrowserEvent", "MapBrowserEvent_default", "originalEvent", "eventType", "EventType_default", "doc", "rootNode", "target", "interactionsArray", "tileQueue", "maxTotalLoading", "maxNewLoads", "hints", "ViewHint_default", "lowOnFrameBudget", "MapEvent_default", "MapEventType_default", "postRenderFunctions", "unlistenByKey", "removeNode", "Composite_default", "MapBrowserEventHandler_default", "key", "MapBrowserEventType_default", "PASSIVE_EVENT_LISTENERS", "keyboardEventTarget", "listen", "view", "ObjectEventType_default", "GroupEvent", "layerStates", "time", "size", "previousFrameState", "hasArea", "viewHints", "viewState", "getForViewAndSize", "getUid", "rotation", "isEmpty", "equals", "createOrUpdateEmpty", "clone", "oldLayerGroup", "computedStyle", "width", "height", "warn", "oldSize", "values", "controls", "assert", "interactions", "overlays", "Map_default", "TileProperty_default", "BaseTileLayer", "Layer_default", "options", "baseOptions", "TileProperty_default", "preload", "useInterimTilesOnError", "pixel", "BaseTile_default", "LayerRenderer", "Observable_default", "layer", "pixel", "abstract", "frameState", "target", "tiles", "zoom", "tile", "source", "projection", "tileRange", "callback", "coordinate", "hitTolerance", "matches", "event", "image", "ImageState_default", "imageState", "EventType_default", "Layer_default", "ZIndexContext", "getSharedCanvasContext2D", "target", "property", "value", "args", "render", "context", "instructionsAtIndex", "ii", "instructionAtIndex", "ZIndexContext_default", "pixelContext", "createPixelContext", "createCanvasContext2D", "CanvasLayerRenderer", "Layer_default", "layer", "create", "image", "col", "row", "data", "frameState", "background", "target", "transform", "backgroundColor", "layerClassName", "container", "context", "equals", "asArray", "canvas", "style", "extent", "topLeft", "getTopLeft", "topRight", "getTopRight", "bottomRight", "getBottomRight", "bottomLeft", "getBottomLeft", "apply", "inverted", "resolution", "rotation", "pixelRatio", "width", "getWidth", "height", "getHeight", "compose", "makeInverse", "canvasTransform", "toString", "type", "event", "Event_default", "EventType_default", "ZIndexContext_default", "center", "offsetX", "dx1", "dy1", "sx", "sy", "dx2", "dy2", "Tile", "Target_default", "tileCoord", "state", "options", "EventType_default", "TileState_default", "tile", "prev", "abstract", "id", "time", "start", "delta", "easeIn", "Tile_default", "ImageTile", "Tile_default", "tileCoord", "state", "src", "crossOrigin", "tileLoadFunction", "options", "element", "TileState_default", "getBlankImage", "image", "listenImage", "ctx", "createCanvasContext2D", "ImageTile_default", "MAX_SUBDIVISION", "MAX_TRIANGLE_WIDTH", "Triangulation", "sourceProj", "targetProj", "targetExtent", "maxSourceExtent", "errorThreshold", "destinationResolution", "transformInvCache", "transformInv", "getTransform", "c", "key", "getWidth", "destinationTopLeft", "getTopLeft", "destinationTopRight", "getTopRight", "destinationBottomRight", "getBottomRight", "destinationBottomLeft", "getBottomLeft", "sourceTopLeft", "sourceTopRight", "sourceBottomRight", "sourceBottomLeft", "maxSubdivision", "getArea", "leftBound", "triangle", "i", "arr", "newTriangle", "minX", "a", "b", "aSrc", "bSrc", "cSrc", "d", "dSrc", "sourceQuadExtent", "boundingExtent", "sourceCoverageX", "sourceWorldWidth", "wrapsX", "needsSubdivision", "targetQuadExtent", "intersects", "isNotFinite", "center", "centerSrc", "dx", "modulo", "dy", "bc", "bcSrc", "da", "daSrc", "ab", "abSrc", "cd", "cdSrc", "extent", "createEmpty", "src", "extendCoordinate", "Triangulation_default", "brokenDiagonalRendering_", "canvasPool", "drawTestTriangle", "ctx", "u1", "v1", "u2", "v2", "verifyBrokenDiagonalRendering", "data", "offset", "isBrokenDiagonalRendering", "createCanvasContext2D", "releaseCanvas", "calculateSourceResolution", "sourceProj", "targetProj", "targetCenter", "targetResolution", "sourceCenter", "transform", "sourceResolution", "getPointResolution", "targetMetersPerUnit", "sourceMetersPerUnit", "sourceExtent", "containsCoordinate", "compensationFactor", "calculateSourceExtentResolution", "targetExtent", "getCenter", "forEachCorner", "corner", "render", "width", "height", "pixelRatio", "triangulation", "sources", "gutter", "renderEdges", "interpolate", "drawSingle", "clipExtent", "context", "pixelRound", "value", "sourceDataExtent", "createEmpty", "src", "i", "arr", "extend", "stitchContext", "stitchScale", "inverseScale", "getWidth", "getHeight", "xPos", "yPos", "srcWidth", "srcHeight", "targetTopLeft", "getTopLeft", "triangle", "source", "target", "x0", "y0", "x1", "y1", "x2", "y2", "u0", "v0", "sourceNumericalShiftX", "sourceNumericalShiftY", "augmentedMatrix", "affineCoefs", "solveLinearSystem", "steps", "ud", "vd", "step", "image", "extent", "ReprojTile", "Tile_default", "sourceProj", "sourceTileGrid", "targetProj", "targetTileGrid", "tileCoord", "wrappedTileCoord", "pixelRatio", "gutter", "getTileFunction", "errorThreshold", "renderEdges", "options", "TileState_default", "targetExtent", "maxTargetExtent", "maxSourceExtent", "limitedTargetExtent", "getIntersection", "getArea", "sourceProjExtent", "targetResolution", "sourceResolution", "calculateSourceExtentResolution", "errorThresholdInPixels", "Triangulation_default", "sourceExtent", "clamp", "worldWidth", "worldsAway", "getWidth", "wrapAndSliceX", "extent", "sourceRange", "srcX", "srcY", "tile", "offset", "sources", "source", "clipExtent", "z", "size", "width", "height", "render", "leftToLoad", "state", "sourceListenKey", "listen", "EventType_default", "e", "unlistenByKey", "arr", "releaseCanvas", "canvasPool", "TileRange", "minX", "maxX", "minY", "maxY", "tileCoord", "tileRange", "x", "y", "createOrUpdate", "TileRange_default", "CanvasTileLayerRenderer", "Layer_default", "tileLayer", "createEmpty", "TileRange_default", "tile", "tileState", "useInterimTilesOnError", "TileState_default", "z", "x", "y", "frameState", "pixelRatio", "projection", "pixel", "layer", "coordinate", "apply", "layerExtent", "containsCoordinate", "viewState", "source", "tileGrid", "tilePixelRatio", "tileCoord", "ImageTile_default", "Tile_default", "tileOrigin", "tileSize", "toSize", "tileResolution", "col", "row", "gutter", "tiles", "zoom", "target", "layerState", "viewResolution", "viewCenter", "rotation", "tileSource", "sourceRevision", "extent", "resolution", "width", "height", "fromUserExtent", "getIntersection", "dx", "dy", "canvasExtent", "tileRange", "tilesToDrawByZ", "findLoadedTiles", "tmpExtent", "tmpTileRange", "viewport", "getRotatedViewport", "uid", "getUid", "inTransition", "childTileRange", "covered", "canvasScale", "context", "compose", "zs", "ascending", "clips", "clipZs", "currentClip", "i", "currentZ", "currentTilePixelSize", "currentScale", "originTileCoord", "getTopLeft", "originTileExtent", "origin", "tileGutter", "tilesToDraw", "tileCoordKey", "xIndex", "nextX", "yIndex", "nextY", "w", "h", "transition", "contextSaved", "ii", "clip", "intersects", "equals", "image", "alpha", "alphaChanged", "postRenderFunction", "map", "tileSourceKey", "usedTiles", "preload", "tileCallback", "wantedTiles", "tileQueue", "minZoom", "tileCount", "TileLayer_default", "TileLayer", "BaseTile_default", "options", "TileLayer_default", "Tile_default", "LRUCache", "highWaterMark", "keep", "key", "f", "entry", "options", "assert", "keys", "i", "values", "value", "size", "LRUCache_default", "createOrUpdate", "z", "x", "y", "tileCoord", "getKeyZXY", "getKey", "fromKey", "key", "hash", "tileCoord", "withinExtentAndZ", "tileGrid", "z", "x", "y", "tileRange", "TileCache", "LRUCache_default", "usedTiles", "key", "z", "fromKey", "tile", "getKey", "TileCache_default", "TileEventType_default", "Source", "Object_default", "options", "get", "adaptAttributions", "self", "resolve", "reject", "projection", "attributions", "state", "attributionLike", "frameState", "Source_default", "tmpTileCoord", "DECIMALS", "TileGrid", "options", "assert", "isSorted", "a", "b", "zoomFactor", "i", "ii", "extent", "getTopLeft", "size", "z", "tileRange", "TileRange_default", "restrictedTileRange", "zoom", "callback", "j", "jj", "tileCoord", "tempTileRange", "tempExtent", "x", "y", "tileCoordExtent", "createOrUpdate", "minX", "minY", "tileCoordZ", "tileCoordX", "tileCoordY", "factor", "maxX", "maxY", "origin", "resolution", "tileSize", "toSize", "coordinate", "opt_tileCoord", "reverseIntersectionPolicy", "scale", "ceil", "floor", "opt_direction", "linearFindNearest", "clamp", "viewport", "intersectsLinearRing", "length", "fullTileRanges", "TileGrid_default", "getForProjection", "projection", "tileGrid", "createForProjection", "wrapX", "tileCoord", "z", "center", "projectionExtent", "extentFromProjection", "containsCoordinate", "worldWidth", "getWidth", "worldsAway", "createForExtent", "extent", "maxZoom", "tileSize", "corner", "resolutions", "resolutionsFromExtent", "TileGrid_default", "getCorner", "createXYZ", "options", "xyzOptions", "get", "gridOptions", "maxResolution", "toSize", "height", "getHeight", "width", "length", "half", "METERS_PER_UNIT", "createOrUpdate", "TileSource", "Source_default", "options", "tileSize", "toSize", "TileCache_default", "projection", "usedTiles", "tileCache", "z", "tileRange", "callback", "covered", "tile", "tileCoordKey", "loaded", "x", "y", "getKeyZXY", "TileState_default", "key", "tileGrid", "pixelRatio", "abstract", "getForProjection", "sourceProjection", "assert", "equivalent", "tilePixelRatio", "scale", "tileCoord", "wrapX", "withinExtentAndZ", "tileCount", "TileSourceEvent", "Event_default", "type", "Tile_default", "createFromTemplate", "template", "tileGrid", "zRegEx", "xRegEx", "yRegEx", "dashYRegEx", "tileCoord", "pixelRatio", "projection", "z", "range", "createFromTemplates", "templates", "len", "tileUrlFunctions", "i", "createFromTileUrlFunctions", "h", "hash", "index", "modulo", "expandUrl", "url", "urls", "match", "startCharCode", "stopCharCode", "charCode", "stop", "i", "UrlTile", "_UrlTile", "Tile_default", "options", "event", "tile", "uid", "getUid", "tileState", "type", "TileState_default", "TileEventType_default", "TileSourceEvent", "tileLoadFunction", "tileUrlFunction", "key", "url", "urls", "expandUrl", "createFromTemplates", "tileCoord", "pixelRatio", "projection", "z", "x", "y", "tileCoordKey", "getKeyZXY", "UrlTile_default", "TileImage", "UrlTile_default", "options", "defaultTileLoadFunction", "ImageTile_default", "key", "projection", "usedTiles", "usedTileCache", "id", "tileCache", "equivalent", "thisProj", "projKey", "getUid", "getForProjection", "TileCache_default", "z", "x", "y", "pixelRatio", "tileCoord", "urlTileCoord", "tileUrl", "tile", "TileState_default", "EventType_default", "sourceProjection", "cache", "tileCoordKey", "getKey", "sourceTileGrid", "targetTileGrid", "wrappedTileCoord", "newTile", "Tile_default", "getKeyZXY", "interimTile", "render", "tilegrid", "proj", "get", "imageTile", "src", "TileImage_default", "XYZ", "TileImage_default", "options", "projection", "tileGrid", "createXYZ", "extentFromProjection", "XYZ_default", "map", "Map_default", "Tile_default", "XYZ_default", "View_default"]
}
